<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>韩朔的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hans2936.github.io/"/>
  <updated>2019-07-12T08:08:28.888Z</updated>
  <id>https://hans2936.github.io/</id>
  
  <author>
    <name>韩朔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  
  <entry>
  <title>意大利</title>

  <link href="https://hans2936.github.io/2019/01/02/Italy/"/>
  <id>https://hans2936.github.io/2019/01/02/Italy/</id>
    <published>2019-01-01T17:55:42.000Z</published>
    <updated>2019-07-12T08:08:28.888Z</updated>
    
    <content type="html">&lt;h2 id=&quot;罗马-佛罗伦萨-威尼斯&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2019/01/02/Italy/#罗马-佛罗伦萨-威尼斯&quot; class=&quot;headerlink&quot; title=&quot;罗马-佛罗伦萨-威尼斯&quot;&gt;&lt;/a&gt;罗马-佛罗伦萨-威尼斯&lt;/h2&gt;&lt;p&gt;回国之前的刺客信条之旅。(封面：《春》)&lt;br&gt;&lt;div id=&quot;dplayer1&quot; class=&quot;dplayer hexo-tag-dplayer-mark&quot; style=&quot;margin-bottom: 20px;&quot;&gt;&lt;/div&gt;&lt;script&gt;(function(){var player = new DPlayer({&quot;container&quot;:document.getElementById(&quot;dplayer1&quot;),&quot;theme&quot;:&quot;#FADFA3&quot;,&quot;loop&quot;:true,&quot;video&quot;:{&quot;url&quot;:&quot;https://hans-blog-video.oss-cn-beijing.aliyuncs.com/%E6%84%8F%E5%A4%A7%E5%88%A9.mp4&quot;,&quot;pic&quot;:&quot;https://hans2936.github.io/2019/01/02/Italy/Spring.jpg&quot;}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()&lt;/script&gt;&lt;br&gt; &lt;center&gt; （出现视频长度后）点击加载 &lt;/center&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;罗马-佛罗伦萨-威尼斯&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2019/01/02/Italy/#罗马-佛罗伦萨-威尼斯&quot; class=&quot;headerlink&quot; title=&quot;罗马-佛罗伦萨-威尼斯&quot;&gt;&lt;/a&gt;罗马-佛罗伦萨-威尼斯&lt;/h2&gt;&lt;p&gt;回国之前的刺客信条之旅。(封面：《春》)&lt;br&gt;&lt;div id=&quot;dplayer1&quot; class=&quot;dplayer hexo-tag-dplayer-mark&quot; style=&quot;margin-bottom: 20px;&quot;&gt;&lt;/div&gt;&lt;script&gt;(function(){var player = new DPlayer({&quot;container&quot;:document.getElementById(&quot;dplayer1&quot;),&quot;theme&quot;:&quot;#FADFA3&quot;,&quot;loop&quot;:true,&quot;video&quot;:{&quot;url&quot;:&quot;https://hans-blog-video.oss-cn-beijing.aliyuncs.com/%E6%84%8F%E5%A4%A7%E5%88%A9.mp4&quot;,&quot;pic&quot;:&quot;https://hans2936.github.io/2019/01/02/Italy/Spring.jpg&quot;}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()&lt;/script&gt;&lt;br&gt; &lt;center&gt; （出现视频长度后）点击加载 &lt;/center&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://hans2936.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="旅行" scheme="https://hans2936.github.io/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  
  <entry>
  <title>欧洲行</title>

  <link href="https://hans2936.github.io/2018/06/19/EuroTrip/"/>
  <id>https://hans2936.github.io/2018/06/19/EuroTrip/</id>
    <published>2018-06-18T17:55:42.000Z</published>
    <updated>2018-12-01T23:24:54.857Z</updated>
    
    <content type="html">&lt;h2 id=&quot;慕尼黑-汉堡-巴黎-柏林&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/19/EuroTrip/#慕尼黑-汉堡-巴黎-柏林&quot; class=&quot;headerlink&quot; title=&quot;慕尼黑-汉堡-巴黎-柏林&quot;&gt;&lt;/a&gt;慕尼黑-汉堡-巴黎-柏林&lt;/h2&gt;&lt;p&gt;四月-五月春游，开心。(封面：在新天鹅堡看高天鹅堡)&lt;br&gt;&lt;div id=&quot;dplayer0&quot; class=&quot;dplayer hexo-tag-dplayer-mark&quot; style=&quot;margin-bottom: 20px;&quot;&gt;&lt;/div&gt;&lt;script&gt;(function(){var player = new DPlayer({&quot;container&quot;:document.getElementById(&quot;dplayer0&quot;),&quot;theme&quot;:&quot;#FADFA3&quot;,&quot;loop&quot;:true,&quot;video&quot;:{&quot;url&quot;:&quot;https://hans-blog-video.oss-cn-beijing.aliyuncs.com/%E6%AC%A7%E6%B4%B2%E8%A1%8C201805.mp4&quot;,&quot;pic&quot;:&quot;https://hans2936.github.io/2018/06/19/EuroTrip/Hohenschwangau.jpg&quot;}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()&lt;/script&gt;&lt;br&gt; &lt;center&gt; （出现视频长度后）点击加载 &lt;/center&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;!-- ![在新天鹅堡看高天鹅堡](EuroTrip/Hohenschwangau.jpg)--&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;慕尼黑-汉堡-巴黎-柏林&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/19/EuroTrip/#慕尼黑-汉堡-巴黎-柏林&quot; class=&quot;headerlink&quot; title=&quot;慕尼黑-汉堡-巴黎-柏林&quot;&gt;&lt;/a&gt;慕尼黑-汉堡-巴黎-柏林&lt;/h2&gt;&lt;p&gt;四月-五月春游，开心。(封面：在新天鹅堡看高天鹅堡)&lt;br&gt;&lt;div id=&quot;dplayer0&quot; class=&quot;dplayer hexo-tag-dplayer-mark&quot; style=&quot;margin-bottom: 20px;&quot;&gt;&lt;/div&gt;&lt;script&gt;(function(){var player = new DPlayer({&quot;container&quot;:document.getElementById(&quot;dplayer0&quot;),&quot;theme&quot;:&quot;#FADFA3&quot;,&quot;loop&quot;:true,&quot;video&quot;:{&quot;url&quot;:&quot;https://hans-blog-video.oss-cn-beijing.aliyuncs.com/%E6%AC%A7%E6%B4%B2%E8%A1%8C201805.mp4&quot;,&quot;pic&quot;:&quot;https://hans2936.github.io/2018/06/19/EuroTrip/Hohenschwangau.jpg&quot;}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()&lt;/script&gt;&lt;br&gt; &lt;center&gt; （出现视频长度后）点击加载 &lt;/center&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://hans2936.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="旅行" scheme="https://hans2936.github.io/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  
  <entry>
  <title>Github Pages(四)：Hexo进阶-NexT本地搜索引擎的移植</title>

  <link href="https://hans2936.github.io/2018/06/15/HexoSearch/"/>
  <id>https://hans2936.github.io/2018/06/15/HexoSearch/</id>
    <published>2018-06-14T17:55:42.000Z</published>
    <updated>2018-06-24T18:18:35.745Z</updated>
    
    <content type="html">&lt;p&gt;Hexo 默认的 Landscape 主题其实已经很好了，可以说简明美观，网页上的元素也不难添加。&lt;br&gt;但是美中不足的就是用了谷歌搜索引擎，谷歌在国内打不开就不说了，而且用外部搜索引擎本来也不如站内搜索便捷实用。&lt;br&gt;后来我发现 NexT 主题是有站内搜索功能的，就试着把这个功能移植了进来。&lt;/p&gt;
&lt;h2 id=&quot;本地搜索的原理&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/#本地搜索的原理&quot; class=&quot;headerlink&quot; title=&quot;本地搜索的原理&quot;&gt;&lt;/a&gt;本地搜索的原理&lt;/h2&gt;&lt;p&gt;对于动态网站来说，可以通过 php 实现（具体见&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/&quot;&gt;Github Pages(二)：个人网站的功能插件&lt;/a&gt;）。&lt;br&gt;但是，GitHub博客是静态网站，用不了 php，导致我在老网站只能把google搜索结果页内置到了网站里面 （Landscape也用了谷歌）。&lt;/p&gt;
&lt;p&gt;NexT 主题实现这个功能，用了 Hexo 的拓展包 &lt;code&gt;hexo-generator-searchdb&lt;/code&gt;，它预先生成了一个文本库&lt;code&gt;search.xml&lt;/code&gt;，然后传到了网站里面 。在本地搜索的时候，NexT直接用javascript调用了这个文件，从而实现了静态网站的本地搜索。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;首先把产生文本库的包安装好，执行 &lt;code&gt;npm install hexo-generator-searchdb --save&lt;/code&gt;。&lt;br&gt;然后在主配置文件 &lt;code&gt;_config.yml&lt;/code&gt;里面加上&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;search:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  path: search.xml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  field: post&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  format: html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  limit: 10000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;并且在主题配置文件加上&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;local_search:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  trigger: auto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  top_n_per_article: 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;trigger&lt;/code&gt;表示搜索结果会不会打字时自动显示，&lt;code&gt;top_n_per_article&lt;/code&gt; 表示每篇文章最多显示几条结果（-1为不限数字）。&lt;br&gt;这些只是准备工作，在把代码放到Landscape 之前，这些设置不会起任何作用。&lt;/p&gt;
&lt;h2 id=&quot;NexT-主题的本地搜索代码&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/#NexT-主题的本地搜索代码&quot; class=&quot;headerlink&quot; title=&quot;NexT 主题的本地搜索代码&quot;&gt;&lt;/a&gt;NexT 主题的本地搜索代码&lt;/h2&gt;&lt;p&gt;NexT 主题的 local-search 主要是下面几个模块组成的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;核心javascript脚本：&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/blob/master/layout/_third-party/search/localsearch.swig&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;localsearch.swig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;css配置文件：&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/blob/master/source/css/_common/components/third-party/localsearch.styl&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;localsearch.styl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;搜索框：&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/blob/master/layout/_partials/search/localsearch.swig&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;另一个localsearch.swig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在header中添加链接：&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/blob/master/layout/_partials/header.swig&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;header.swig&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Landscape主题的后缀有所不同（不是.swig， 而是.ejs），这几个文件copy过来之后需要稍微改一下语法，几个图标也需要重新定义，细节如下。&lt;/p&gt;
&lt;h2 id=&quot;移植步骤&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/#移植步骤&quot; class=&quot;headerlink&quot; title=&quot;移植步骤&quot;&gt;&lt;/a&gt;移植步骤&lt;/h2&gt;&lt;h3 id=&quot;定义”搜索”，”关闭”，”无结果”等图标&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/#定义”搜索”，”关闭”，”无结果”等图标&quot; class=&quot;headerlink&quot; title=&quot;定义”搜索”，”关闭”，”无结果”等图标&quot;&gt;&lt;/a&gt;定义”搜索”，”关闭”，”无结果”等图标&lt;/h3&gt;&lt;p&gt;NexT 大量使用了 &lt;code&gt;&amp;lt;i class = &amp;quot;fa abc&amp;quot;&amp;gt; &amp;lt;/i&amp;gt;&lt;/code&gt; 这样的方式来引用 FontAwesome 图标，但是 Landscape 却不支持这么用。&lt;br&gt;所以一开始不得不定义一些图标，在主题文件夹 &lt;code&gt;themes/landscape/&lt;/code&gt; 的 &lt;code&gt;/source/css/&lt;/code&gt; 下面找个地方 （比如说&lt;code&gt;_partial/header.styl&lt;/code&gt;），定义：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#icon-close:before &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  font-family: FontAwesome;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  content: &amp;quot;\f146&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  font-size: x-large&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就定义了一个关闭搜索框的图标。移植的时候重新定义图标为&lt;code&gt;&amp;lt;span id=&amp;quot;icon-close&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt; 就可以了。&lt;br&gt;新定义的图标主要是搜索 &lt;code&gt;\f002&lt;/code&gt;，关闭&lt;code&gt;\f146&lt;/code&gt;，和无结果 &lt;code&gt;\f119&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;放入调出搜索框的链接&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/#放入调出搜索框的链接&quot; class=&quot;headerlink&quot; title=&quot;放入调出搜索框的链接&quot;&gt;&lt;/a&gt;放入调出搜索框的链接&lt;/h3&gt;&lt;p&gt;首先进入主题文件夹的&lt;code&gt;/layout/_partial/header.ejs&lt;/code&gt; ，那里默认有一个搜索链接（&lt;code&gt;id=&amp;quot;nav-search-btn&amp;quot; class=&amp;quot;nav-icon&amp;quot;&lt;/code&gt;）。&lt;br&gt;把这个链接扩展为：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% if(!theme.local_search.enable) &amp;#123; %&amp;gt;&amp;lt;a id=&amp;quot;nav-search-btn&amp;quot; class=&amp;quot;nav-icon&amp;quot; title=&amp;quot;&amp;lt;%= __(&amp;apos;search&amp;apos;) %&amp;gt;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% if(theme.local_search.enable) &amp;#123; %&amp;gt;&amp;lt;a href=&amp;quot;javascript:;&amp;quot; class=&amp;quot;popup-trigger nav-icon&amp;quot; id=&amp;quot;nav-search-btn&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这也就意味着用主题配置中的 &lt;code&gt;local_search.enable&lt;/code&gt; 来控制搜索功能了，打开本地搜索的情况下，搜索链接会启动&lt;code&gt;class=&amp;quot;popup-trigger&amp;quot;&lt;/code&gt;，也就打开了本地搜索引擎。&lt;/p&gt;
&lt;h3 id=&quot;放入搜索框&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/#放入搜索框&quot; class=&quot;headerlink&quot; title=&quot;放入搜索框&quot;&gt;&lt;/a&gt;放入搜索框&lt;/h3&gt;&lt;p&gt;还是着刚才的文件&lt;code&gt;header.ejs&lt;/code&gt;，可以在最后一行&lt;code&gt;&amp;lt;/header&amp;gt;&lt;/code&gt;前面加上&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% if(theme.local_search.enable) &amp;#123; %&amp;gt;&amp;lt;div class=&amp;quot;local-search-inner&amp;quot;&amp;gt;&amp;lt;%- partial(&amp;apos;search&amp;apos;) %&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;code&gt;&amp;lt;%- partial(&amp;#39;search&amp;#39;) %&amp;gt;&lt;/code&gt; 指向了 &lt;code&gt;search.ejs&lt;/code&gt;，这个文件也就是 NexT 的搜索框&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/blob/master/layout/_partials/search/localsearch.swig&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;另一个localsearch.swig&lt;/a&gt;了。&lt;br&gt;把它拷贝成&lt;code&gt;search.ejs&lt;/code&gt; 跟 &lt;code&gt;header.ejs&lt;/code&gt; 放在一起，但是图标要全部换成适配Landscape的定义。另外直接明码写上&lt;code&gt;placeholder=&amp;quot; 本地搜索...&amp;quot;&lt;/code&gt; 就可以了。&lt;/p&gt;
&lt;h3 id=&quot;放入核心-javascript&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/#放入核心-javascript&quot; class=&quot;headerlink&quot; title=&quot;放入核心 javascript&quot;&gt;&lt;/a&gt;放入核心 javascript&lt;/h3&gt;&lt;p&gt;把&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/blob/master/layout/_third-party/search/localsearch.swig&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;localsearch.swig&lt;/a&gt;放入&lt;code&gt;/layout/_partial/&lt;/code&gt;, 并且命名为&lt;code&gt;localsearch.ejs&lt;/code&gt;。&lt;br&gt;然后在&lt;code&gt;/layout/layout.ejs&lt;/code&gt;的最后，&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; 的上一行引用这个文件 &lt;code&gt;&amp;lt;%- partial(&amp;#39;_partial/localsearch&amp;#39;) %&amp;gt;&lt;/code&gt;。&lt;br&gt;这个目的是在每一个网页的最下方加入这一段 javascript。&lt;/p&gt;
&lt;p&gt;然后就要改这个文件了， 要改的有三项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;图标&lt;br&gt;跟刚才一样，凡是带&lt;code&gt;class=&amp;quot;fa abc&amp;quot;&lt;/code&gt; 的图标都要重新定义成适配Landscape的。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;语法&lt;br&gt;改成 &lt;code&gt;localsearch.ejs&lt;/code&gt; 之后，这个脚本里面的两类语法要改。 一是if..else..要这样用：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% if (theme.local_search.enable)&amp;#123; %&amp;gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;二是config要这样调用（注意有个等号）：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var search_path = &amp;quot;&amp;lt;%= config.search.path %&amp;gt;&amp;quot; ;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;大概一共三四处要改，主要是config能读到就可以了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;搜索框的位置&lt;br&gt;这个脚本里面有一处容易坑的地方，就是这一行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&amp;apos;.popup&amp;apos;).detach().appendTo(&amp;apos;.header-inner&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意这个&lt;code&gt;.header-inner&lt;/code&gt;是搜索框的位置，是要根据情况改的。比如我刚才在&lt;code&gt;header.ejs&lt;/code&gt;定义的是&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;local-search-inner&amp;quot;&amp;gt;&amp;lt;%- partial(&amp;apos;search&amp;apos;) %&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那就要把&lt;code&gt;.header-inner&lt;/code&gt; 改为 &lt;code&gt;.local-search-inner&lt;/code&gt; 了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;放入渲染文件，取消阴影背景&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/#放入渲染文件，取消阴影背景&quot; class=&quot;headerlink&quot; title=&quot;放入渲染文件，取消阴影背景&quot;&gt;&lt;/a&gt;放入渲染文件，取消阴影背景&lt;/h3&gt;&lt;p&gt;渲染文件也是必须的，可以把 &lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/blob/master/source/css/_common/components/third-party/localsearch.styl&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;localsearch.styl&lt;/a&gt; 放入 &lt;code&gt;/source/css/_partial/&lt;/code&gt;&lt;br&gt;然后在主渲染文件&lt;code&gt;/source/css/style.styl&lt;/code&gt;中，注意加上 &lt;code&gt;@import &amp;quot;_partial/localsearch&amp;quot;&lt;/code&gt; 就可以了。 &lt;/p&gt;
&lt;p&gt;不知道什么原因，这个搜索引擎的阴影背景&lt;code&gt;.local-search-pop-overlay&lt;/code&gt; 总是会出现在最上方，导致搜索框出来之后根本点不到。我直接给它设置 &lt;code&gt;z-index: auto&lt;/code&gt; ，跳过了这个问题。&lt;/p&gt;
&lt;p&gt;这个文件是大部分元素的渲染文件，可以用来调整图标位置，placeholder文字的大小等等，这都是细节了。&lt;/p&gt;
&lt;h3 id=&quot;把原先的搜索功能关掉&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/#把原先的搜索功能关掉&quot; class=&quot;headerlink&quot; title=&quot;把原先的搜索功能关掉&quot;&gt;&lt;/a&gt;把原先的搜索功能关掉&lt;/h3&gt;&lt;p&gt;原先的搜索能在 &lt;code&gt;source/js/script.js&lt;/code&gt; 里面，把这一段code移到 &lt;code&gt;localsearch.ejs&lt;/code&gt; 里面，然后用一个&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% if (!theme.local_search.enable)&amp;#123; %&amp;gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;来控制就可以了。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;最终搜索的效果截图在这里：&lt;br&gt;&lt;img src=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/HexoSearch.jpg&quot; alt=&quot;本地搜索的效果&quot;&gt;&lt;br&gt;其实直接用 NexT 就好了，不过自己编辑主题可以趁机学习一下。毕竟还是成功了。&lt;br&gt;有一点很重要的是，自己编辑主题是免不了要debug的，要善用谷歌浏览器的检查功能（以及最简单的输出 &lt;code&gt;console.log()&lt;/code&gt;，或者其他工具的同类功能）。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo 默认的 Landscape 主题其实已经很好了，可以说简明美观，网页上的元素也不难添加。&lt;br&gt;但是美中不足的就是用了谷歌搜索引擎，谷歌在国内打不开就不说了，而且用外部搜索引擎本来也不如站内搜索便捷实用。&lt;br&gt;后来我发现 NexT 主题是有站内搜索功能的，就试着把这个功能移植了进来。&lt;/p&gt;
&lt;h2 id=&quot;本地搜索的原理&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/#本地搜索的原理&quot; class=&quot;headerlink&quot; title=&quot;本地搜索的原理&quot;&gt;&lt;/a&gt;本地搜索的原理&lt;/h2&gt;&lt;p&gt;对于动态网站来说，可以通过 php 实现（具体见&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/&quot;&gt;Github Pages(二)：个人网站的功能插件&lt;/a&gt;）。&lt;br&gt;但是，GitHub博客是静态网站，用不了 php，导致我在老网站只能把google搜索结果页内置到了网站里面 （Landscape也用了谷歌）。&lt;/p&gt;
&lt;p&gt;NexT 主题实现这个功能，用了 Hexo 的拓展包 &lt;code&gt;hexo-generator-searchdb&lt;/code&gt;，它预先生成了一个文本库&lt;code&gt;search.xml&lt;/code&gt;，然后传到了网站里面 。在本地搜索的时候，NexT直接用javascript调用了这个文件，从而实现了静态网站的本地搜索。&lt;/p&gt;
    
    </summary>
    
      <category term="工作" scheme="https://hans2936.github.io/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="个人网站" scheme="https://hans2936.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  
  <entry>
  <title>Github Pages(三)：使用Hexo博客生成工具</title>

  <link href="https://hans2936.github.io/2018/06/06/HexoLog/"/>
  <id>https://hans2936.github.io/2018/06/06/HexoLog/</id>
    <published>2018-06-06T12:55:42.000Z</published>
    <updated>2018-07-02T14:29:04.997Z</updated>
    
    <content type="html">&lt;p&gt;最近用 Hexo 搭建了工作网站 &lt;a href=&quot;https://cern.ch/shhan&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CERN:Shuo Han&lt;/a&gt;，发现这个工具发文章就像是发朋友圈一样简单。虽然我以前用网页拼凑&lt;a href=&quot;https://github.com/hans2936/Hans_Blog_Old&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我的老网站&lt;/a&gt;花了很多时间，但我还是决定换了，写作和发布体验还是很重要的。&lt;br&gt;我的理解是，这是一个自动生成静态（html+css+js）网站的工具，主题里是很多模块化的网页，可以通过.yml配置文件运用这些模块，把MarkDown(.md)博客批量转化为网页并且跟主页形成总分结构。&lt;br&gt;下面是我用Hexo搭建个人网站的过程和网站配置：&lt;/p&gt;
&lt;p&gt;首先，一切以&lt;a href=&quot;https://hexo.io/zh-cn/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo官网&lt;/a&gt;为准。&lt;/p&gt;
&lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;正常使用Github的电脑。&lt;/li&gt;
&lt;li&gt;开了Github Pages的Repository。&lt;br&gt;如果不了解Github可以看&lt;a href=&quot;https://hans2936.github.io/2017/10/21/PageBasic/&quot;&gt;Github Pages(一)：一个最基础的个人网站&lt;/a&gt;。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;配置Hexo文件夹&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#配置Hexo文件夹&quot; class=&quot;headerlink&quot; title=&quot;配置Hexo文件夹&quot;&gt;&lt;/a&gt;配置Hexo文件夹&lt;/h3&gt;&lt;p&gt;在mac上安装 Node/Npm&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew install node&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;（windows/linux用户参见&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;此官方教程&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;安装 Hexo&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo init blog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd blog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这时博客就在本地生成了。访问&lt;code&gt;http://localhost:4000&lt;/code&gt; 可以看效果。&lt;br&gt;可以说Hexo是很强大的，默认主题网站结构合理，适配手机，搜索栏（google）也有了。只需要优化（改一下失效的链接，添加评论，RSS等模块）就行了。&lt;/p&gt;
&lt;h3 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hexo g&lt;/code&gt; 生成/public 文件夹，里面是网站&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hexo d&lt;/code&gt; 把这个网站文件夹推送到服务器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hexo clean&lt;/code&gt; 删除网站文件夹&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hexo s&lt;/code&gt; 本地查看效果&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;配置文件&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#配置文件&quot; class=&quot;headerlink&quot; title=&quot;配置文件&quot;&gt;&lt;/a&gt;配置文件&lt;/h3&gt;&lt;p&gt;配置文件是两个，第一个是根目录的 &lt;code&gt;_config.yml&lt;/code&gt;。重要配置有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;language: zh-CN 是中文，不写是英文&lt;/li&gt;
&lt;li&gt;url: &lt;a href=&quot;https://hans2936.github.io/&quot;&gt;https://hans2936.github.io&lt;/a&gt; （网站地址）&lt;/li&gt;
&lt;li&gt;root: / (根目录在哪里，github就写斜杠，有些服务器会多一层路径)&lt;/li&gt;
&lt;li&gt;skip_render: README.md 这样可以在 /source 里面放一个 README.md，推送的时候自动传到 Github 上面&lt;/li&gt;
&lt;li&gt;theme: landscape 这里可以换主题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推送设置 (GitHub)&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repository: https://github.com/hans2936/hans2936.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果网站在服务器上，则可以用 rsync&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: rsync&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host: 服务器名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  user: 用户名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  root: 放网站的文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  port: 22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第二个配置文件，是主题的配置文件 &lt;code&gt;themes/landscape/_config.yml&lt;/code&gt;，主要有导航栏(&lt;code&gt;menu&lt;/code&gt;)，侧边栏(&lt;code&gt;widgets&lt;/code&gt;)，网站图标(&lt;code&gt;favicon&lt;/code&gt;)等。&lt;/p&gt;
&lt;h3 id=&quot;写新文章&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#写新文章&quot; class=&quot;headerlink&quot; title=&quot;写新文章&quot;&gt;&lt;/a&gt;写新文章&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new &amp;quot;article name&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这条命令会在&lt;code&gt;source/_posts&lt;/code&gt;产生新文件，然后改改文件名，在进入编辑MarkDown就行了。&lt;/p&gt;
&lt;p&gt;每篇文章最上面是配置区，能用到的主要是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;title: 题目&lt;/li&gt;
&lt;li&gt;date: 日期 （会影响在主页的顺序）&lt;/li&gt;
&lt;li&gt;tags: 标签&lt;/li&gt;
&lt;li&gt;categories: 分类&lt;/li&gt;
&lt;li&gt;updated: 修改日期&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置区下面就随便写了。值得一提的是，文章正文是支持html语言的，这样特殊字体和元素就可以直接加进去。&lt;/p&gt;
&lt;h3 id=&quot;创建页面&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#创建页面&quot; class=&quot;headerlink&quot; title=&quot;创建页面&quot;&gt;&lt;/a&gt;创建页面&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new page about&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;会在 &lt;code&gt;source/about&lt;/code&gt; 里面产生新文件，跟文章是一样编辑的。&lt;br&gt;然后再从主题配置的导航栏里面加上这一页。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;menu:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  关于: /about&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;引用图片&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#引用图片&quot; class=&quot;headerlink&quot; title=&quot;引用图片&quot;&gt;&lt;/a&gt;引用图片&lt;/h3&gt;&lt;p&gt;执行 &lt;code&gt;npm install hexo-asset-image --save&lt;/code&gt;&lt;br&gt;然后，主配置文件 &lt;code&gt;_config.yml&lt;/code&gt; 设置为&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;post_asset_folder: true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个时候创建新文章就会产生一个同名文件夹，把图片放入即可。&lt;br&gt;然后在文章正文这样引用放进去的图片。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;![图片描述](文章名/图片名)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;引用视频文件&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#引用视频文件&quot; class=&quot;headerlink&quot; title=&quot;引用视频文件&quot;&gt;&lt;/a&gt;引用视频文件&lt;/h3&gt;&lt;p&gt;对某个链接中的视频文件，可以执行 &lt;code&gt;npm install hexo-tag-dplayer&lt;/code&gt;&lt;br&gt;这是一个播放器插件，使用时在文章中加入：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% dplayer &amp;quot;url=&amp;quot;  &amp;quot;pic=&amp;quot; &amp;quot;loop=yes&amp;quot; &amp;quot;theme=#FADFA3&amp;quot; &amp;quot;autoplay=false&amp;quot; &amp;quot;token=tokendemo&amp;quot; %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;code&gt;url&lt;/code&gt; 是视频地址，&lt;code&gt;pic&lt;/code&gt; 是缩略图地址。&lt;/p&gt;
&lt;p&gt;这个方法是引入视频的最佳方法，但是需要一个地方来存放这些文件（url）。&lt;br&gt;Github只有1G太少了，可以考虑使用&lt;a href=&quot;https://oss.console.aliyun.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阿里云oss存储&lt;/a&gt;，淘宝账户就能开，还很便宜。&lt;/p&gt;
&lt;h3 id=&quot;引入第三方视频&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#引入第三方视频&quot; class=&quot;headerlink&quot; title=&quot;引入第三方视频&quot;&gt;&lt;/a&gt;引入第三方视频&lt;/h3&gt;&lt;p&gt;对视频网站上的视频，可在Markdown文件中明码使用html语言 &lt;code&gt;iframe&lt;/code&gt;，比如&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;selfadapting-video&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;iframe src=&amp;quot;&amp;quot; scrolling=&amp;quot;no&amp;quot; border=&amp;quot;0&amp;quot; frameborder=&amp;quot;no&amp;quot; framespacing=&amp;quot;0&amp;quot; allowfullscreen=&amp;quot;true&amp;quot;&amp;gt; &amp;lt;/iframe&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;class=&amp;quot;selfadapting-video&amp;quot;&lt;/code&gt; 是一个自适应长宽比例的容器，具体看&lt;a href=&quot;https://angeltime.cc/archives/685.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这篇博客&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;创建侧边栏&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#创建侧边栏&quot; class=&quot;headerlink&quot; title=&quot;创建侧边栏&quot;&gt;&lt;/a&gt;创建侧边栏&lt;/h3&gt;&lt;p&gt;比如在 &lt;code&gt;themes/landscape/layout/_widget/&lt;/code&gt; 创建一个 about.ejs&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% if (site.tags.length)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;div class=&amp;quot;widget-wrap&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;h3 class=&amp;quot;widget-title&amp;quot;&amp;gt;About&amp;lt;/h3&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;widget&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      E-mail: xyz@123.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在主题配置的侧边栏中加上：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;widgets:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- about&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;RSS-订阅&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#RSS-订阅&quot; class=&quot;headerlink&quot; title=&quot;RSS 订阅&quot;&gt;&lt;/a&gt;RSS 订阅&lt;/h3&gt;&lt;p&gt;执行 &lt;code&gt;npm install hexo-generator-feed&lt;/code&gt; 下载rss功能包，&lt;br&gt;然后在主配置文件 &lt;code&gt;_config.yml&lt;/code&gt; 里面加上&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;plugin:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- hexo-generator-feed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;feed:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: atom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;path: atom.xml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;limit: 20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在主题配置文件里加上 &lt;code&gt;rss: /atom.xml&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;网上的教程都是这样的，但是当我实际加入的时候，发现rss软件里面的图片都是空的。&lt;br&gt;后来我找到了这个&lt;a href=&quot;https://github.com/atika/hexo-generator-feed&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Fork of hexo-generator-feed&lt;/a&gt;，用它来替换官方的包，然后去掉包里面 &lt;code&gt;atom.xml&lt;/code&gt; 里面的 &lt;code&gt;cdata&lt;/code&gt;就可以了。&lt;br&gt;这个包还剩下一个bug是当程序框里的某一行code过长(出现左右拖动的功能后)，rss显示的code字体过大，但是不涉及编程的文章就没有问题了。&lt;/p&gt;
&lt;h3 id=&quot;站点地图&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#站点地图&quot; class=&quot;headerlink&quot; title=&quot;站点地图&quot;&gt;&lt;/a&gt;站点地图&lt;/h3&gt;&lt;p&gt;类似上一条，执行 &lt;code&gt;npm install hexo-generator-sitemap --save&lt;/code&gt;&lt;br&gt;主配置文件添加：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Sitemap &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sitemap:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    path: sitemap.xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后提交给 Google Search Console 就行了。&lt;/p&gt;
&lt;h3 id=&quot;高级修改-评论，分享&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#高级修改-评论，分享&quot; class=&quot;headerlink&quot; title=&quot;高级修改 (评论，分享)&quot;&gt;&lt;/a&gt;高级修改 (评论，分享)&lt;/h3&gt;&lt;p&gt;Hexo的网页其实是被拆开成很多零件的，主要在&lt;code&gt;themes/landscape/layout/_partial/&lt;/code&gt;，&lt;br&gt;当在网页中加入一个新的模块时，比如对评论系统Gitment来说（关于Gitment见&lt;a href=&quot;https://imsun.net/posts/gitment-introduction/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;此教程&lt;/a&gt;），首先要打开 &lt;code&gt;head.ejs&lt;/code&gt; 引用js, css文件（需放入&lt;code&gt;themes/landscape/source&lt;/code&gt;）&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;/css/gitment.css&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&amp;quot;/js/gitment.browser.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在 &lt;code&gt;article.ejs&lt;/code&gt; 里面加上 Gitment 的code&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% if (!index &amp;amp;&amp;amp; post.comments)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;section id=&amp;quot;comments&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;div id=&amp;quot;gitment&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      const gitment = new Gitment(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        id: &amp;apos;&amp;lt;%= post.date %&amp;gt;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        owner: &amp;apos;username&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        repo: &amp;apos;username.github.io&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        oauth: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        client_id: &amp;apos;---yourID---&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        client_secret: &amp;apos;---yourKey---&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      gitment.render(&amp;apos;gitment&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/section&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;就实现这个第三方功能了。注意 &lt;code&gt;id: &amp;#39;&amp;lt;%= post.date %&amp;gt;&amp;#39;&lt;/code&gt; 这句话是为了修复网页路径过长不能显示评论的bug (在手机app内分享网页很容易出现长后缀)。&lt;/p&gt;
&lt;p&gt;主题自带的功能也可以改，比如说分享功能可以在&lt;code&gt;themes/landscape/source/js/script.js&lt;/code&gt;加一句，&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;&amp;lt;a href=&amp;quot;http://service.weibo.com/share/share.php?&amp;amp;title=&amp;apos; + encodedUrl + &amp;apos;&amp;quot; class=&amp;quot;article-share-sina&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;微博&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后找到&lt;code&gt;themes/landscape/source/css/_partial/article.styl&lt;/code&gt; 比照着定义一个 &lt;code&gt;.article-share-sina&lt;/code&gt; 就可以了。&lt;/p&gt;
&lt;p&gt;像这种高级修改，对有一定网页知识的人来说有无限可能，自己做一个主题都是可以的。&lt;/p&gt;
&lt;h2 id=&quot;本站的Hexo设置&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#本站的Hexo设置&quot; class=&quot;headerlink&quot; title=&quot;本站的Hexo设置&quot;&gt;&lt;/a&gt;本站的Hexo设置&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;默认主题 Landscape。&lt;/li&gt;
&lt;li&gt;抬头图片位置&lt;code&gt;banner.jpg&lt;/code&gt;：我家的猫。&lt;/li&gt;
&lt;li&gt;评论系统为Gitment，需要引用&lt;code&gt;gitment.css&lt;/code&gt;, &lt;code&gt;gitment.broser.js&lt;/code&gt;， 并编辑 &lt;code&gt;article.ejs&lt;/code&gt; 和 &lt;code&gt;head.ejs&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;分享按钮为自带按钮，包括Sina（改 &lt;code&gt;script.js&lt;/code&gt; 和 &lt;code&gt;article.styl&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;jquery.min.js 路径从google改为 &lt;a href=&quot;https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js&lt;/a&gt; (改 &lt;code&gt;after-footer.ejs&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;从 NexT 主题移植而来的本地搜索引擎，见&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/&quot;&gt;Github Pages(四)：Hexo进阶-NexT本地搜索引擎的移植&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近用 Hexo 搭建了工作网站 &lt;a href=&quot;https://cern.ch/shhan&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CERN:Shuo Han&lt;/a&gt;，发现这个工具发文章就像是发朋友圈一样简单。虽然我以前用网页拼凑&lt;a href=&quot;https://github.com/hans2936/Hans_Blog_Old&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我的老网站&lt;/a&gt;花了很多时间，但我还是决定换了，写作和发布体验还是很重要的。&lt;br&gt;我的理解是，这是一个自动生成静态（html+css+js）网站的工具，主题里是很多模块化的网页，可以通过.yml配置文件运用这些模块，把MarkDown(.md)博客批量转化为网页并且跟主页形成总分结构。&lt;br&gt;下面是我用Hexo搭建个人网站的过程和网站配置：&lt;/p&gt;
&lt;p&gt;首先，一切以&lt;a href=&quot;https://hexo.io/zh-cn/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo官网&lt;/a&gt;为准。&lt;/p&gt;
&lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;正常使用Github的电脑。&lt;/li&gt;
&lt;li&gt;开了Github Pages的Repository。&lt;br&gt;如果不了解Github可以看&lt;a href=&quot;https://hans2936.github.io/2017/10/21/PageBasic/&quot;&gt;Github Pages(一)：一个最基础的个人网站&lt;/a&gt;。&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
      <category term="工作" scheme="https://hans2936.github.io/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="个人网站" scheme="https://hans2936.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  
  <entry>
  <title>Github Pages(二)：个人网站的功能插件</title>

  <link href="https://hans2936.github.io/2017/10/22/PageLog/"/>
  <id>https://hans2936.github.io/2017/10/22/PageLog/</id>
    <published>2017-10-21T17:55:42.000Z</published>
    <updated>2018-06-24T18:19:00.366Z</updated>
    
    <content type="html">&lt;p&gt;在&lt;a href=&quot;https://hans2936.github.io/2017/10/21/PageBasic/&quot;&gt;Github Pages(一)：一个最基础的个人网站&lt;/a&gt;中，我们已经介绍了怎样用Github Pages做出一个网站框架，例如完全重复出 &lt;a href=&quot;https://html5up.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HTML5 UP&lt;/a&gt; 网站上的某个模版。在熟悉该模版之后，你就已经可以编写博客页(html)，并且链接到首页了。甚至可以有出色的排版与配图。&lt;/p&gt;
&lt;p&gt;但对一个博客网站来说这样还不够，很多互动功能也是需要手动添加、单独理解的，包括评论框、搜索栏、点击量计数、分享按钮、网站导航、网页排版和图片滚动等。&lt;/p&gt;
&lt;p&gt;这一篇文章是一个大合集，总结我曾经见到的个人网站互动功能，以及各个解决方案的优劣。&lt;/p&gt;
&lt;p&gt;注意：虽然列出了这么多插件，但是这些只是技术储备，如果你是一个网站新手，建议先阅读&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/&quot;&gt;Github Pages(三)：使用Hexo博客生成工具&lt;/a&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;搜索功能&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#搜索功能&quot; class=&quot;headerlink&quot; title=&quot;搜索功能&quot;&gt;&lt;/a&gt;搜索功能&lt;/h2&gt;&lt;p&gt;搜索功能包括两部分，一是在站内快速找到某一篇博客，这个方便网站的使用；二是在站外的搜索引擎上可以查到你的博客，这个有助于网站的推广。然而我在选择搜索工具的时候发现静态网站是无法自己写站内引擎的，所以我的搜索功能就暂时借助第三方（谷歌）实现了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：这篇文章写的早，后来我在&lt;a href=&quot;https://hans2936.github.io/2018/06/15/HexoSearch/&quot;&gt;Github Pages(四)：Hexo进阶-NexT本地搜索引擎的移植&lt;/a&gt;搞定了站内搜索。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;php站内搜索的失败尝试&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#php站内搜索的失败尝试&quot; class=&quot;headerlink&quot; title=&quot;php站内搜索的失败尝试&quot;&gt;&lt;/a&gt;php站内搜索的失败尝试&lt;/h3&gt;&lt;p&gt;在站内搜索到某个文件，直接写一段PHP遍历本站文件是最靠谱的，所以我就搜到了一位大神写的code（&lt;a href=&quot;http://www.moon-soft.com/download/info/1492.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;月光软件文章&lt;/a&gt;）。但是这段code有两个函数（&lt;code&gt;eregi&lt;/code&gt;和&lt;code&gt;split&lt;/code&gt;）在PHP7 过期了。所以我修改了一下（使用&lt;code&gt;preg_match&lt;/code&gt;和&lt;code&gt;explode&lt;/code&gt;），成了这个文件&lt;a href=&quot;https://github.com/hans2936/Hans_Blog_Old/blob/master/search.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;search.php&lt;/a&gt;。&lt;br&gt;使用的时候，只要在网页中调用这个search.php就可以了，比如说&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;form method=&amp;quot;GET&amp;quot; action=&amp;quot;search.php&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;keyword&amp;quot; placeholder=&amp;quot;PHP站内搜索&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个搜索引擎目前的效果是简单的列出全部搜出来的文件链接，在这个效果上美化一下就可以了。&lt;/p&gt;
&lt;p&gt;在测试PHP文件的时候，必须要打开本地Web服务，启动方法（Mac）参见本文的“网页编辑后的预览”一节。&lt;/p&gt;
&lt;p&gt;不成功的原因是显然的，Github Pages是静态的，不能运行php程序。不过这段学习经历挺有意思。&lt;/p&gt;
&lt;h3 id=&quot;谷歌自定义搜索&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#谷歌自定义搜索&quot; class=&quot;headerlink&quot; title=&quot;谷歌自定义搜索&quot;&gt;&lt;/a&gt;谷歌自定义搜索&lt;/h3&gt;&lt;p&gt;引入谷歌自定义搜索有两个工作，一是建立一个自定义引擎（&lt;a href=&quot;https://cse.google.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;谷歌自定义搜索&lt;/a&gt;），二是给谷歌提供网站信息（&lt;a href=&quot;https://www.google.com/webmasters/tools&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Google Search Console&lt;/a&gt;）。&lt;br&gt;点击&lt;a href=&quot;https://cse.google.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;谷歌自定义搜索&lt;/a&gt;，创建一个搜索引擎，然后在“外观”选项卡里就可以找到“保存并获取代码”按钮了。把这个代码加入你要显示结果的网页即可。&lt;br&gt;谷歌自定义引擎的搜索框有点丑，十有八九跟你的主题不一样，好在这个引擎也支持分页显示。本站的搜索功能就是用分页的方式实现的：首先选择一个分页的引擎主题，然后单独建立一个Search.html，加入刚才说的自定义引擎代码，然后在其他网页需要加入搜索框的地方输入一个原生主题的搜索框。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;form method=&amp;quot;Get&amp;quot; action=&amp;quot;blogs/Search.html&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;q&amp;quot; id=&amp;quot;s&amp;quot; placeholder=&amp;quot;站内Google&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样每次搜索就会跳转到搜索结果页了。当然也可以用“弹出”的主题，把&lt;code&gt;action&lt;/code&gt;直接放到本页，就可以有直接在本页显示结果的效果。&lt;br&gt;给谷歌提供网站信息也是很重要的，这决定了谷歌搜索你网站时结果的质量。我首先在&lt;a href=&quot;https://www.google.com/webmasters/tools&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Google Search Console&lt;/a&gt;注册了一个账户，添加本站，然后在管理界面的“抓取”、“站点地图”添加了一个写着本站所有网页地址的sitemap.txt文件，这样谷歌就知道本站以及各个网页的位置了（只添加站点不提交地图也行，这关系到谷歌爬取网页的效率)。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hans2936.github.io/2017/10/22/PageLog/GoogleSite.jpg&quot; alt=&quot;正确提交Sitemap之后&quot;&gt;&lt;/p&gt;
&lt;p&gt;这个解决方案可以得到在网站内显示谷歌搜索结果的效果。但是当我频繁修改网站的时候，谷歌的滞后是很明显的。&lt;/p&gt;
&lt;p&gt;为了提高效果，还可以提交更多的信息给谷歌，包括一些关键词，这些我就没有深究了。&lt;/p&gt;
&lt;h3 id=&quot;百度自定义搜索&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#百度自定义搜索&quot; class=&quot;headerlink&quot; title=&quot;百度自定义搜索&quot;&gt;&lt;/a&gt;百度自定义搜索&lt;/h3&gt;&lt;p&gt;百度自定义搜索其实跟谷歌差不多，都包括自定义一个引擎加入网页（&lt;a href=&quot;http://zn.baidu.com/cse/searchbox/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;百度自定义搜索&lt;/a&gt;），和为百度提供网站信息（&lt;a href=&quot;http://zhanzhang.baidu.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;百度站长工具&lt;/a&gt;）两个步骤。这里就不赘述了。&lt;br&gt;但是百度跟Github Pages的兼容性似乎是有问题的，百度抓取github.io的效率明显比谷歌低很多（搜索同样的Github Pages网页就知道了，而且我把本站提交给百度没有效果）。所以本站的第三方搜索引擎还是选择了谷歌。&lt;/p&gt;
&lt;h2 id=&quot;评论功能&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#评论功能&quot; class=&quot;headerlink&quot; title=&quot;评论功能&quot;&gt;&lt;/a&gt;评论功能&lt;/h2&gt;&lt;p&gt;评论功能是博客的重要互动功能，但是评论是动态的，Github Pages是静态的，需要借助一个第三方服务来实现。&lt;/p&gt;
&lt;h3 id=&quot;新浪评论框的失败尝试&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#新浪评论框的失败尝试&quot; class=&quot;headerlink&quot; title=&quot;新浪评论框的失败尝试&quot;&gt;&lt;/a&gt;新浪评论框的失败尝试&lt;/h3&gt;&lt;p&gt;在网上搜了一下之后，我最先想到的解决方案是&lt;a href=&quot;http://open.weibo.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微博开放平台&lt;/a&gt;，因为微博几乎谁都有，从演示的效果来看，评论功能使用微博评论箱，再结合微博分享、微博赞按钮两个插件，就跟在微博内部评论是一样的了（甚至还有微博秀这种直接展示微博个人页的功能），等于把个人博客和微博社区结合起来了。&lt;/p&gt;
&lt;p&gt;作为官方插件，需要先申请一个Appkey。这件事有两个步骤，一是在&lt;a href=&quot;http://open.weibo.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微博开放平台&lt;/a&gt;申请一个账户，然后提交身份验证。二是在&lt;a href=&quot;http://open.weibo.com/connect&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微博开放平台：网站接入&lt;/a&gt;接入你的网站，然后提交审核。&lt;br&gt;Github Pages显然是境外网站，不需要提供备案信息，只要选择境外网站的验证，把域名查询（&lt;a href=&quot;http://whois.chinaz.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;站长之家Whois查询&lt;/a&gt;）和ip查询（&lt;a href=&quot;http://www.iapolo.com/ip/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阿波罗ip查询&lt;/a&gt;）的结果放到一张图片上上传就行了。&lt;br&gt;在网页中加入评论箱本身并不复杂，只要点击&lt;a href=&quot;http://open.weibo.com/widget/comments.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微博开放平台：评论箱&lt;/a&gt;，然后把底部代码加入网页就行了。其他插件也是一样的，本地预览可以很快看到效果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;然而，微博插件在Github Pages是不能正常使用的。&lt;/strong&gt;一开始我并不知道原因，后来用Chrome浏览器打开网页的时候，发现这些插件实际上是被浏览器安全政策阻止了。这对个人网站来说肯定是不可接受的，因为你不能要求访问者为了访问你的网站而修改浏览器设置。&lt;br&gt;进一步去查这些插件不安全的原因，就发现微博的插件是不支持https的，而现在Github Pages用的是https的域名。进入Github Pages库的设置，会发现这么一个无法更改的选项。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Enforce HTTPS&lt;br&gt;— Required for your site because you are using the default domain (hans2936.github.io)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说除非我自己买一个域名，否则这个选项是不能修改的。再说好像没必要为了一个评论系统把网站从https改成http，这个方案也就搁浅了。&lt;/p&gt;
&lt;h3 id=&quot;来必力&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#来必力&quot; class=&quot;headerlink&quot; title=&quot;来必力&quot;&gt;&lt;/a&gt;来必力&lt;/h3&gt;&lt;p&gt;第二个方案是找一些专门提供评论服务的网站，我找到了现在比较流行的&lt;a href=&quot;http://www.laibili.com.cn/city-demo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;来必力&lt;/a&gt;。&lt;br&gt;加入这个服务就比新浪评论箱简单多了。先注册一个账户，然后点击“体验”、“管理中心”，就可以看到代码了。&lt;br&gt;这个服务的好处是可以用国内所有的社交网站登陆（QQ、微信、微博），而且界面也很好看。&lt;br&gt;但是来必力有一个硬伤，就是加载速度太慢了。感觉博客前两段看完了这个插件还没加载出来，一开始我觉得无伤大雅，直到我发现这个评论框不加载完，本站的导航栏就弹不出来。这就有点影响体验了，所以这个方案也没使用。&lt;/p&gt;
&lt;h3 id=&quot;Gitment&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#Gitment&quot; class=&quot;headerlink&quot; title=&quot;Gitment&quot;&gt;&lt;/a&gt;Gitment&lt;/h3&gt;&lt;p&gt;最后我终于找了一个比较合适的评论系统：&lt;a href=&quot;https://imsun.net/posts/gitment-introduction/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;教程：Gitment&lt;/a&gt;。&lt;br&gt;这个教程已经很详细了，唯一需要注意的是它跟search.php一样必须开本地Web服务器才能查看效果。&lt;br&gt;这个评论系统是直接把Github issues搬到你自己的网页。它有三个好处，第一个就是把Github pages和Github issues联系起来，这样连评论带网站都在一个库里面；第二个好处是Gitment是一个出色的评论框，支持markdown语法，还自带点赞；第三个好处是加载速度快。唯一的坏处就是只能使用Github账户评论，不过我觉得可以接受，因为本来就是技术性博客，提高评论门槛也未必是坏事。&lt;br&gt;所以这就是我网站的评论框解决方案了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hans2936.github.io/2017/10/22/PageLog/Gitment.jpg&quot; alt=&quot;Gitment的使用效果&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;分享按钮&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#分享按钮&quot; class=&quot;headerlink&quot; title=&quot;分享按钮&quot;&gt;&lt;/a&gt;分享按钮&lt;/h2&gt;&lt;p&gt;分享也是博客网站重要的互动功能。在国内比较重要的就是支持微信和微博的分享，尤其是微信。&lt;br&gt;本站的评论栏上面都有分享按钮，其中微信还可以扫码，这个功能来自于&lt;a href=&quot;https://github.com/overtrue/share.js&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github:share.js&lt;/a&gt;。这个Github文件夹的Readme有一个教程，不过我是把整个包下载下来，仔细看了一下demo网页，然后照搬到本站的。&lt;br&gt;现在这个分享按钮并不是腾讯或新浪提供的原生插件，对微博、QQ来说是跳转到一个分享页，对微信来说是在微信中打开本网址，进而实现分享的。因为有微博评论箱的经验，我也就不强求原生插件了，这个效果还可以。&lt;/p&gt;
&lt;h2 id=&quot;计数&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#计数&quot; class=&quot;headerlink&quot; title=&quot;计数&quot;&gt;&lt;/a&gt;计数&lt;/h2&gt;&lt;p&gt;在博客列表统计评论数、点击数、赞数可以让访问者快速找到比较火的文章。也可以为进一步排序提供依据。统计也是动态的，要借助一个第三方服务。&lt;br&gt;本站的博客都有一个点击量统计，这些数字是提供自&lt;a href=&quot;http://busuanzi.ibruce.info/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;网站:不蒜子&lt;/a&gt;的。教程链接为&lt;a href=&quot;http://ibruce.info/2015/04/04/busuanzi/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;教程:不蒜子&lt;/a&gt;，非常简单，粘贴里面的代码进入网页即可。这个统计分本站点击，本站访问人次和本页点击。&lt;br&gt;但是现在点击统计仅限于本页，没有传递到博客列表。另外，评论和赞的统计比点击数更有意义，Gitment应该可以做到但还没有官方的解决方案。这些以后再去开发吧。&lt;/p&gt;
&lt;h2 id=&quot;网页设计&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#网页设计&quot; class=&quot;headerlink&quot; title=&quot;网页设计&quot;&gt;&lt;/a&gt;网页设计&lt;/h2&gt;&lt;h3 id=&quot;使用Markdown编辑网页博客&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#使用Markdown编辑网页博客&quot; class=&quot;headerlink&quot; title=&quot;使用Markdown编辑网页博客&quot;&gt;&lt;/a&gt;使用Markdown编辑网页博客&lt;/h3&gt;&lt;p&gt;在写博客的时候，如果直接在html里面敲字体验并不好。因为要不断地敲一些&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;,  &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 这些格式的开头和结尾。虽然latex写习惯了之后这也没什么，但是个人博客还有更轻松的办法来写，就是用Markdown编辑器。&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/Markdown&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Markdown语法&lt;/a&gt;是一个非常适合写日志的语法。我直接从App Store里面搜了一个编辑器，叫&lt;a href=&quot;http://zh.mweb.im/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MWeb&lt;/a&gt;，还是很好用的。写完之后可以直接导出为html格式，然后取其中正文部分粘贴到博客网页即可。这个过程只需要注意检查图片、列表等特殊部分跟网站模板的兼容性就行了。&lt;/p&gt;
&lt;p&gt;举例来说，Mweb支持数学公式的编辑和导出，这是用&lt;a href=&quot;https://www.mathjax.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MathJax&lt;/a&gt;来实现的。MWeb在导出html时会自动转换格式，但此时要注意检查网页的引用：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;script type=&amp;quot;text/x-mathjax-config&amp;quot;&amp;gt;MathJax.Hub.Config(&amp;#123;TeX: &amp;#123;equationNumbers: &amp;#123; autoNumber: &amp;quot;AMS&amp;quot; &amp;#125; &amp;#125;&amp;#125;);&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更简单的就是使用Hexo等博客发布工具，这样省去了自己导出html，直接编辑好Markdown，再加一条&lt;code&gt;hexo g&lt;/code&gt;命令就变成网页了。&lt;/p&gt;
&lt;h3 id=&quot;网页编辑后的预览&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#网页编辑后的预览&quot; class=&quot;headerlink&quot; title=&quot;网页编辑后的预览&quot;&gt;&lt;/a&gt;网页编辑后的预览&lt;/h3&gt;&lt;p&gt;网页预览的方式有四种：&lt;/p&gt;
&lt;p&gt;一，直接用浏览器打开html，这肯定是最快的。但是有些插件不能显示，比如不能测试上述的Gitment和search.php。但是大部分工作还是能胜任的。&lt;/p&gt;
&lt;p&gt;二， 使用&lt;a href=&quot;https://zh.wikipedia.org/wiki/Adobe_Dreamweaver&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Adobe Dreamweaver&lt;/a&gt;这样的专业工具检查，我并没有开发太多功能，不过很重要的是检查网页的报错，以及批量查找/替换某个词句。&lt;/p&gt;
&lt;p&gt;三， 打开本地Web服务器。这是能完美运行网站上所有插件，甚至可以测试动态模块的办法。具体步骤参见&lt;a href=&quot;http://www.jianshu.com/p/d006a34a343f&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;简书博客:Mac OS X Web Server&lt;/a&gt;。比较重要的命令就是&lt;code&gt;apachectl&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apachectl start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apachectl stop&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动&lt;code&gt;apachectl&lt;/code&gt;后，把你的网站文件夹拷贝到&lt;code&gt;/Library/WebServer/Documents&lt;/code&gt;，然后打开&lt;code&gt;http://127.0.0.1/网站文件夹&lt;/code&gt;就可以了，博客里面还写了一些高级功能，如怎样更改路径和配置等。&lt;/p&gt;
&lt;p&gt;四，如果用了Hexo博客工具，一条&lt;code&gt;hexo s&lt;/code&gt;命令就可以了。&lt;/p&gt;
&lt;h2 id=&quot;图片滚动&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#图片滚动&quot; class=&quot;headerlink&quot; title=&quot;图片滚动&quot;&gt;&lt;/a&gt;图片滚动&lt;/h2&gt;&lt;h3 id=&quot;图片滚动插件&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#图片滚动插件&quot; class=&quot;headerlink&quot; title=&quot;图片滚动插件&quot;&gt;&lt;/a&gt;图片滚动插件&lt;/h3&gt;&lt;p&gt;这个功能对博客来说可有可无，不过对于普通网站来说，宣传新闻，推销产品什么的还是很有用的。我觉得很有意思就留在首页了，循环播放本站的日志，这应该是本站唯一一个没那么朴素的效果。&lt;br&gt;本站的插件叫做&lt;a href=&quot;https://github.com/Codeinwp/Nivo-Slider-jQuery&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nivo Slider&lt;/a&gt;，用起来比较舒服，因为图片和图例是分开的，设置也很多。我试了好几个素材网站的插件都没有这个好。但是Nivo Slider有一个毛病是图片的尺寸最好都一样，而且不能太方正（我都是1920x960的图），否则电脑端还好，但在移动端会出现显示问题。&lt;/p&gt;
&lt;p&gt;点击链接&lt;a href=&quot;https://github.com/Codeinwp/Nivo-Slider-jQuery&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github:Nivo Slider&lt;/a&gt;，下载并学习demo就可以把它加入你的网页了。&lt;/p&gt;
&lt;h3 id=&quot;手机滑动的实现&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#手机滑动的实现&quot; class=&quot;headerlink&quot; title=&quot;手机滑动的实现&quot;&gt;&lt;/a&gt;手机滑动的实现&lt;/h3&gt;&lt;p&gt;Nivo Slider本身是不支持手机的，找那两个小按钮实在比较麻烦。所以我找到了一位高人的博客 &lt;a href=&quot;http://willrees.com/2013/02/make-your-nivo-slider-touch-capable/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Will Rees&lt;/a&gt;。他在里面讲了怎样利用一段支持手机滑动指令的代码 &lt;a href=&quot;http://hammerjs.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hammer.js&lt;/a&gt;实现Nivo Slider的左右滑动。&lt;br&gt;用手机打开本站主页就可以看到效果了。不过因为我只是在Nivo Slider上面稍作修改，在手机上是只能左右滑动，不能手指悬停的。完美的解决方案可能是为手机单独找个插件。&lt;/p&gt;
&lt;h2 id=&quot;回到顶部按钮&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#回到顶部按钮&quot; class=&quot;headerlink&quot; title=&quot;回到顶部按钮&quot;&gt;&lt;/a&gt;回到顶部按钮&lt;/h2&gt;&lt;p&gt;在网页很长的时候，回到顶部按钮就很有用了。这个需要一段javascript code实现。我是在Google上随便找了一个，改了改图标和大小，也可以看文件&lt;a href=&quot;https://github.com/hans2936/Hans_Blog_Old/blob/master/assets/js/back.js&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;back.js&lt;/a&gt;。确定按钮图片的位置对之后，引用一下就可以了。&lt;/p&gt;
&lt;h2 id=&quot;关于、版权&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#关于、版权&quot; class=&quot;headerlink&quot; title=&quot;关于、版权&quot;&gt;&lt;/a&gt;关于、版权&lt;/h2&gt;&lt;p&gt;考虑到现在转载不署名的情况到处都是，在某个位置声明一下网站内容的版权也是有必要的。&lt;br&gt;在网页中加入版权声明其实很简单，只要进入版权网页&lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/3.0/cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Creative Commons&lt;/a&gt;，在这一页最下方点击“&lt;a href=&quot;https://creativecommons.org/choose/results-one?license_code=by-nc-sa&amp;amp;jurisdiction=cn&amp;amp;version=3.0&amp;amp;lang=zh&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;将这个授权协议使用在您自己的作品中&lt;/a&gt;”就可以找到代码了，或者直接点这里的链接也行。&lt;/p&gt;
&lt;p&gt;这个证书是一个署名-可修改-非商业用途证书，如果你需要其他政策，也可以去Google其他证书的名字，基本上第一个弹出来的就是这些Createive Commons协议了。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;至此我总结完了学习过程中遇到的各种功能插件。我属于业余，很多细节还在学习中，相信会有更好的解决方案。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;a href=&quot;https://hans2936.github.io/2017/10/21/PageBasic/&quot;&gt;Github Pages(一)：一个最基础的个人网站&lt;/a&gt;中，我们已经介绍了怎样用Github Pages做出一个网站框架，例如完全重复出 &lt;a href=&quot;https://html5up.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HTML5 UP&lt;/a&gt; 网站上的某个模版。在熟悉该模版之后，你就已经可以编写博客页(html)，并且链接到首页了。甚至可以有出色的排版与配图。&lt;/p&gt;
&lt;p&gt;但对一个博客网站来说这样还不够，很多互动功能也是需要手动添加、单独理解的，包括评论框、搜索栏、点击量计数、分享按钮、网站导航、网页排版和图片滚动等。&lt;/p&gt;
&lt;p&gt;这一篇文章是一个大合集，总结我曾经见到的个人网站互动功能，以及各个解决方案的优劣。&lt;/p&gt;
&lt;p&gt;注意：虽然列出了这么多插件，但是这些只是技术储备，如果你是一个网站新手，建议先阅读&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/&quot;&gt;Github Pages(三)：使用Hexo博客生成工具&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="工作" scheme="https://hans2936.github.io/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="个人网站" scheme="https://hans2936.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  
  <entry>
  <title>Github Pages(一)：一个最基础的个人网站</title>

  <link href="https://hans2936.github.io/2017/10/21/PageBasic/"/>
  <id>https://hans2936.github.io/2017/10/21/PageBasic/</id>
    <published>2017-10-20T17:55:42.000Z</published>
    <updated>2018-06-24T18:18:48.986Z</updated>
    
    <content type="html">&lt;p&gt;一直想做个博客网站，去网上查了一下，最先查出来的是云服务器+WordPress，不过又要买服务器，又要买域名，还得备案。&lt;br&gt;后来发现每个Github账户都可以开一个自己的静态网站（域名为 username.github.io），非常简单。&lt;br&gt;静态网站的定义参见&lt;a href=&quot;https://zh.wikipedia.org/wiki/网页设计&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科-网页设计&lt;/a&gt;，虽然方便，但是也有一些功能上的限制，最显著的特点就是不能运行php和asp，不能自动读写站内的文件。&lt;br&gt;不过静态网页依然可以实现个人博客需要的所有功能，而我也只是学习一下做网页、博客什么的，这个方案已经是最好的了。&lt;/p&gt;
&lt;p&gt;这篇博客介绍搭建一个基于html的网站框架的过程。&lt;/p&gt;
&lt;h2 id=&quot;拥有并了解Github-账户&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/21/PageBasic/#拥有并了解Github-账户&quot; class=&quot;headerlink&quot; title=&quot;拥有并了解Github 账户&quot;&gt;&lt;/a&gt;拥有并了解Github 账户&lt;/h2&gt;&lt;h3 id=&quot;第一步-注册&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/21/PageBasic/#第一步-注册&quot; class=&quot;headerlink&quot; title=&quot;第一步 注册&quot;&gt;&lt;/a&gt;第一步 注册&lt;/h3&gt;&lt;p&gt;没啥好说的，进入&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com&lt;/a&gt;，然后注册一个账户就可以了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;第二步-确保可以自由地创建-修改-下载-上传一个库（repository）&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/21/PageBasic/#第二步-确保可以自由地创建-修改-下载-上传一个库（repository）&quot; class=&quot;headerlink&quot; title=&quot;第二步 确保可以自由地创建/修改/下载/上传一个库（repository）&quot;&gt;&lt;/a&gt;第二步 确保可以自由地创建/修改/下载/上传一个库（repository）&lt;/h3&gt;&lt;p&gt;网页是由很多html，css，js等文件组成的，对github pages来说，一个repository就是存放这些文件的文件夹，所以确保可以随心所欲的管理一个库是最基本的。&lt;/p&gt;
&lt;p&gt;这里是第一个官方教程：&lt;a href=&quot;https://guides.github.com/activities/hello-world/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub:Hello world&lt;/a&gt;。可以通过按钮来理解一个库的构造和维护，不过这只能让你创建修改一个Readme文件。&lt;br&gt;这里你会意识到每个库是可以创建分支(branch)的，实际操作中，如果对版本要求没那么严格（做个网页而已），你可以忽略branch的存在，只用master一个默认branch即可。&lt;/p&gt;
&lt;p&gt;这个时候你已经可以用网页看到这么一个库了，到这一步你的库可能只有一个Readme：&lt;/p&gt;
&lt;p&gt;Github的关键就是可以用Git来控制（&lt;a href=&quot;https://zh.wikipedia.org/wiki/Git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科-Git&lt;/a&gt;），这是一个版本工具（我的理解是一个每次上传都备份一个版本，并且可以协调多人同时修改的公用网盘）。当在确定自己的终端可以使用 &lt;code&gt;git --version&lt;/code&gt; 命令（Mac+Xcode自带），并且安装了SSH-Key 之后，你就可以使用如下的基本命令来控制你的库了：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone 你的SSH地址 （下载你的reposity，这个地址可以用网页浏览的Clone-or-Download-use SSH按钮看到，比如说git@github.com:uername/reposity.git）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git pull （联系服务器，更新本地文件夹）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add --all （写入本地的所有新文件）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -am &amp;quot;随便说点啥&amp;quot; （在本地进行一次有记录地更新，包括本地所有文件的修改）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push origin master （把本地的更新推送到服务器）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;SSH-Key决定了你的电脑有没有权限进行这些操作，这里有另一个官方教程：&lt;a href=&quot;https://help.github.com/articles/connecting-to-github-with-ssh/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub:SSH&lt;/a&gt;，这个是必须一步步跟下来的，Mac的重要命令包括：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ls -al ~/.ssh (查一下是不是已经有key了)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa -b 4096 -C &amp;quot;your_email@example.com&amp;quot; （产生一个key，不单独设密码的话一路回车就行）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pbcopy &amp;lt; ~/.ssh/id_rsa.pub （把你的key复制到粘贴板，不这么复制可能太长了复制不下来）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Linux和Windows进入刚才的教程看就行，如下图，在点击“右上角头像”+“Settings”+“SSH and GPG Keys” 这里添加了你刚刚复制的public Key之后，你就有权限进行上述的Git操作了。&lt;/p&gt;
&lt;h2 id=&quot;搭建Github-Page网站&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/21/PageBasic/#搭建Github-Page网站&quot; class=&quot;headerlink&quot; title=&quot;搭建Github Page网站&quot;&gt;&lt;/a&gt;搭建Github Page网站&lt;/h2&gt;&lt;h3 id=&quot;第一步-创建一个Github-Pages-repository&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/21/PageBasic/#第一步-创建一个Github-Pages-repository&quot; class=&quot;headerlink&quot; title=&quot;第一步 创建一个Github Pages repository&quot;&gt;&lt;/a&gt;第一步 创建一个Github Pages repository&lt;/h3&gt;&lt;p&gt;GitHub Pages repository跟普通的repository是一样的，唯一的区别就是他的名字必须叫做username.gihub.io。这个官方教程 &lt;a href=&quot;https://pages.github.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub Pages&lt;/a&gt; 写的十分好懂，按这个做完之后你就有了一个你的网址 username.github.io，里面有一句 Hello World！&lt;/p&gt;
&lt;h3 id=&quot;第二步-最基础的网站框架&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/21/PageBasic/#第二步-最基础的网站框架&quot; class=&quot;headerlink&quot; title=&quot;第二步 最基础的网站框架&quot;&gt;&lt;/a&gt;第二步 最基础的网站框架&lt;/h3&gt;&lt;p&gt;现在离一个好网站只差一步了，就是把某个好网站的所有文件拷贝到你的文件夹里面。&lt;br&gt;GitHub官方建议你使用博客生成工具 &lt;a href=&quot;https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jekyll&lt;/a&gt; 。GitHub在库的设置里面还提供Jekyll主题选择。而我的博客使用了&lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;生成工具，具体见我的博客&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/&quot;&gt;Github Pages(三)：使用Hexo博客生成工具&lt;/a&gt;。&lt;br&gt;强烈推荐使用网站工具，这样可以直接用markdown格式编辑文章，而且使用简单的命令实现预览，生成和发布，从而节省大量的时间。&lt;/p&gt;
&lt;p&gt;我一开始并不了解博客工具，所以去了一个模版网站 &lt;a href=&quot;https://html5up.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HTML5 UP&lt;/a&gt;，然后下载了其中一个模版，直接在本地打开 index.html，就看到了网站预览，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hans2936.github.io/2017/10/21/PageBasic/PageBasic.jpg&quot; alt=&quot;朴素的网页模版&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后我再手动&lt;code&gt;git add&lt;/code&gt; 所有的文件到我的网站中。当你&lt;code&gt;git push&lt;/code&gt;之后，你的域名就会变成这样一个网站了。这也就是一个最基础的网站了。&lt;br&gt;不用博客工具的好处是有利于学习网页知识，当博客不多的时候，对习惯使用bash+vim的人来说，这样编辑网站是可以接受的。坏处是写一个博客就多一个html，如果有比如超过50篇博客，每篇博客的公共部分就很麻烦了。&lt;/p&gt;
&lt;h3 id=&quot;第三步-开始发挥吧&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/21/PageBasic/#第三步-开始发挥吧&quot; class=&quot;headerlink&quot; title=&quot;第三步 开始发挥吧&quot;&gt;&lt;/a&gt;第三步 开始发挥吧&lt;/h3&gt;&lt;p&gt;不管是使用博客工具，还是直接手动添加html，都离不开对 html/css/JavaScript的基本理解。比如上述简单的网站模版，很多按钮，搜索框等都是空的，需要简单的填充。而即使用了博客工具，想要添加“关于”，或者侧边栏等各种元素，也是需要运用网页语言的。&lt;br&gt;下面就是自由发挥了，继续进入&lt;a href=&quot;https://hans2936.github.io/2018/06/06/HexoLog/&quot;&gt;Github Pages(三)：使用Hexo博客生成工具&lt;/a&gt;使用博客生成工具，并且到&lt;a href=&quot;https://hans2936.github.io/2017/10/22/PageLog/&quot;&gt;Github Pages(二):个人网站的功能插件&lt;/a&gt;寻找想要使用的插件吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一直想做个博客网站，去网上查了一下，最先查出来的是云服务器+WordPress，不过又要买服务器，又要买域名，还得备案。&lt;br&gt;后来发现每个Github账户都可以开一个自己的静态网站（域名为 username.github.io），非常简单。&lt;br&gt;静态网站的定义参见&lt;a href=&quot;https://zh.wikipedia.org/wiki/网页设计&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科-网页设计&lt;/a&gt;，虽然方便，但是也有一些功能上的限制，最显著的特点就是不能运行php和asp，不能自动读写站内的文件。&lt;br&gt;不过静态网页依然可以实现个人博客需要的所有功能，而我也只是学习一下做网页、博客什么的，这个方案已经是最好的了。&lt;/p&gt;
&lt;p&gt;这篇博客介绍搭建一个基于html的网站框架的过程。&lt;/p&gt;
&lt;h2 id=&quot;拥有并了解Github-账户&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/21/PageBasic/#拥有并了解Github-账户&quot; class=&quot;headerlink&quot; title=&quot;拥有并了解Github 账户&quot;&gt;&lt;/a&gt;拥有并了解Github 账户&lt;/h2&gt;&lt;h3 id=&quot;第一步-注册&quot;&gt;&lt;a href=&quot;https://hans2936.github.io/2017/10/21/PageBasic/#第一步-注册&quot; class=&quot;headerlink&quot; title=&quot;第一步 注册&quot;&gt;&lt;/a&gt;第一步 注册&lt;/h3&gt;&lt;p&gt;没啥好说的，进入&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com&lt;/a&gt;，然后注册一个账户就可以了。&lt;/p&gt;
    
    </summary>
    
      <category term="工作" scheme="https://hans2936.github.io/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="个人网站" scheme="https://hans2936.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  
  <entry>
  <title>游牧</title>

  <link href="https://hans2936.github.io/2015/07/16/YouMu/"/>
  <id>https://hans2936.github.io/2015/07/16/YouMu/</id>
    <published>2015-07-16T12:42:42.000Z</published>
    <updated>2018-06-24T18:19:28.513Z</updated>
    
    <content type="html">&lt;p&gt;如果生来是个牧民，&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;我就会生得身强力壮。&lt;/p&gt;
&lt;p&gt;在马群中奔驰呼号，&lt;/p&gt;
&lt;p&gt;赶去市场与人通商。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;夜晚可以望向天空，&lt;/p&gt;
&lt;p&gt;写下星星月亮的故事。&lt;/p&gt;
&lt;p&gt;我能看清天边的来客，&lt;/p&gt;
&lt;p&gt;极能饮酒，善于歌唱。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我就能追逐水草与甘泉，&lt;/p&gt;
&lt;p&gt;没有可以牵绊的家乡，&lt;/p&gt;
&lt;p&gt;一世繁华皆随我去，&lt;/p&gt;
&lt;p&gt;带上我的好好姑娘。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hans2936.github.io/2015/07/16/YouMu/HuaiRou.jpg&quot; alt=&quot;怀柔水库，记一段开心日子&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;如果生来是个牧民，&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://hans2936.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="诗与散文" scheme="https://hans2936.github.io/tags/%E8%AF%97%E4%B8%8E%E6%95%A3%E6%96%87/"/>
    
  </entry>
  
  
  <entry>
  <title>忘</title>

  <link href="https://hans2936.github.io/2014/03/28/Wang/"/>
  <id>https://hans2936.github.io/2014/03/28/Wang/</id>
    <published>2014-03-28T14:50:42.000Z</published>
    <updated>2018-06-24T18:19:09.234Z</updated>
    
    <content type="html">&lt;p&gt;许三多说，好好活就是做有意义的事。的确，人生是需要有意义的。人生有了意义，就不会“因虚度年华而悔恨，因碌碌无为而羞愧”。所以我们找各种各样的标准，做各种各样的努力。虽然眼界有高低之分，但是人们大多要实现目标，当一个所谓“人生赢家”。&lt;/p&gt;
&lt;p&gt;一年半之前，我从威海游览而回，心智颇通，也思考了人生的意义，我写道：“如云雾中的小水珠，却反射着真理的光”。&lt;/p&gt;
&lt;p&gt;于是暂得于己，快然自足。不管看什么东西，心里都会有一个尺度，看看它会让我离成功更近还是更远。&lt;/p&gt;
&lt;p&gt;然而在这个逻辑之外，还有一个更大的问题：人是客观的，还是主观的呢？是有意义重要，还是知道自己有意义重要呢？&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;苏格拉底早就言明，万事万物皆有因果；而凡是有因果的地方，都有进行分析的余地。分析之后，便是智慧，热爱智慧，便是哲学（philos—sophia）。可见“反射真理的光”，并不是世界上最难的事情。然而景行行止之余，还有一个更重要的问题：就算真的有意义如圣人先知，垂暮之时，又能不能获得彻底的满足呢？&lt;/p&gt;
&lt;p&gt;恐怕不会。&lt;/p&gt;
&lt;p&gt;老子曰：“人皆知美之为美，斯恶已。”客观意义可以找到标准，可主观满足永远是相对而言。如果一个人的审美超前于时代，他看什么都不会美；一个人笑点超前于时代，他看什么都不会笑。从这个角度来说，我们苦苦追求，竟然是缘木求鱼。知道的越多，越不会快乐，孔子哭曰：“胡为乎来哉！”&lt;/p&gt;
&lt;p&gt;当然，一个人得不到喜与乐，并不妨碍一个人的成就。孔子虽然悲伤，依然是万世师表；而苏格拉底之死，更成就了他的伟大。可是，想了一辈子，追了一辈子，却不能获得最终的满足，就算没有“凤鸟不至，河不出图”的叹息，也逃不出“天高地迥，兴尽悲来”的宿命，这不是有些不完美吗？&lt;/p&gt;
&lt;p&gt;彼其于世，未数数然也。&lt;/p&gt;
&lt;p&gt;群英会上，周公瑾醉酒舞剑，歌曰：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“丈夫处世兮立功名；立功名兮慰平生。慰平生兮吾将醉；吾将醉兮发狂吟！”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可见一个人的一生，对于人类可能自有用处，而对他自己来说，成就了什么，悟到了什么，不过是告慰平生。&lt;/p&gt;
&lt;p&gt;在美人迟暮之时，有一壶浊酒，古今多少事，都付笑谈中，如是而已。&lt;/p&gt;
&lt;p&gt;虽然，彼于致福者，未数数然也。&lt;/p&gt;
&lt;p&gt;《人间词话》论词的境界，说“有有我之境，有无我之境”，而“境界有大小，不以是而分高下”。人是客观的，也是主观的。既要追寻自然，把自己成就在“人生忘我的一刹那”；更要满足自己，找一个良辰吉日，不但不要忘我，还要忘记除我之外的一切，忘记一切前因与后果，来纵容自己幼稚的心。&lt;/p&gt;
&lt;p&gt;唯有感情不可计算，算出来的已不是感情。而“输”与“赢”的区别，不过是“一优美，一宏壮也”。&lt;/p&gt;
&lt;p&gt;终于又想起希腊人的三问，我是谁？从哪儿来？到哪儿去？我想，假如你要的只是快乐，那就不要知道答案。&lt;/p&gt;
&lt;p&gt;老子所谓“功成身遂”，王国维所谓“主观之诗人”。我想世界上最美好的人生，就是倾注才华上下求索，再把这一切统统忘记。&lt;/p&gt;
&lt;p&gt;本来无一物，何处惹尘埃。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;注：大学快毕业时写的。&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;许三多说，好好活就是做有意义的事。的确，人生是需要有意义的。人生有了意义，就不会“因虚度年华而悔恨，因碌碌无为而羞愧”。所以我们找各种各样的标准，做各种各样的努力。虽然眼界有高低之分，但是人们大多要实现目标，当一个所谓“人生赢家”。&lt;/p&gt;
&lt;p&gt;一年半之前，我从威海游览而回，心智颇通，也思考了人生的意义，我写道：“如云雾中的小水珠，却反射着真理的光”。&lt;/p&gt;
&lt;p&gt;于是暂得于己，快然自足。不管看什么东西，心里都会有一个尺度，看看它会让我离成功更近还是更远。&lt;/p&gt;
&lt;p&gt;然而在这个逻辑之外，还有一个更大的问题：人是客观的，还是主观的呢？是有意义重要，还是知道自己有意义重要呢？&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://hans2936.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="诗与散文" scheme="https://hans2936.github.io/tags/%E8%AF%97%E4%B8%8E%E6%95%A3%E6%96%87/"/>
    
  </entry>
  
  
  <entry>
  <title>忆威海</title>

  <link href="https://hans2936.github.io/2014/01/18/YiWeiHai/"/>
  <id>https://hans2936.github.io/2014/01/18/YiWeiHai/</id>
    <published>2014-01-18T04:42:42.000Z</published>
    <updated>2018-06-24T18:19:17.572Z</updated>
    
    <content type="html">&lt;p&gt;东行千里，以观海疆&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;雪后天晴，海风激凉&lt;/p&gt;
&lt;p&gt;登高望远在环翠楼顶&lt;/p&gt;
&lt;p&gt;又亲涉海滩，静对白浪&lt;/p&gt;
&lt;p&gt;身后的一切变得黑暗&lt;/p&gt;
&lt;p&gt;大海上闪耀着午后的光&lt;/p&gt;
&lt;p&gt;看那货轮常满载而回&lt;/p&gt;
&lt;p&gt;想视野之外，必有宝藏&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hans2936.github.io/2014/01/18/YiWeiHai/YiWeiHai.jpg&quot; alt=&quot;环翠楼顶，拍摄于当天&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;注1：环翠楼为古威海卫塔楼，视野极好，有明代赵鹤龄《登环翠楼七言排律碑》&lt;br&gt;“区区倭种而今遁，赫赫神威自昔宣”&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;东行千里，以观海疆&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://hans2936.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="诗与散文" scheme="https://hans2936.github.io/tags/%E8%AF%97%E4%B8%8E%E6%95%A3%E6%96%87/"/>
    
  </entry>
  
  
  <entry>
  <title>人如明镜</title>

  <link href="https://hans2936.github.io/2012/07/20/RenRuMingJing/"/>
  <id>https://hans2936.github.io/2012/07/20/RenRuMingJing/</id>
    <published>2012-07-20T09:00:42.000Z</published>
    <updated>2018-06-24T18:17:59.463Z</updated>
    
    <content type="html">&lt;p&gt;回家这些日，发现故乡没什么变化，而这一年发生了多少事，人一辈子的变化又何其多呢？希腊人问道：“我是谁？从哪里来？到哪里去？”但是看到《赤壁赋》里形容人的渺小，好比“寄蜉蝣于天地，渺沧海之一粟”。我们就知道这三问是多么令人悲伤了。&lt;/p&gt;
&lt;p&gt;人都是要死的，而且死得很快，“修短随化，终期于尽”。在有限的人生里，人追求功名利禄，追求幸福快乐，追求真理，追求艺术，但是“一朝春尽红颜老，花谢人亡两不知”，不管人追求了什么，不管这个追求高尚还是低俗，人一旦死了，追到的东西也就看不见了。孙悟空道：“似这般可得长生么？不能？不学！”岂不痛哉！&lt;/p&gt;
&lt;p&gt;于是“在逃去如飞的日子里，在千门万户的世界里”，人们惘然而追问，我是谁？我在哪？我为什么出现？我来这里做什么呢？&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;思考这个问题的人不计其数，法国人帕斯卡尔如是说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;人只不过是一根芦苇，是自然界最脆弱的东西，但他是一根能思想的芦苇，用不着整个宇宙都拿起武器来毁灭他，一口气，一滴水，就足以致他死命了。然而…他知道自己要死亡，知道宇宙对他的优势，而宇宙对此却一无所知。因此，我们的全部尊严就在于思想。正是由于它而不是由于我们所无法填充的空间和时间，我们才必须提高自己。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;虽然人与自然从来不是敌人，大自然也不想“致人死命”；但是这句话抓住了人最大的特点，说白了，就是会说话，会思考，能大自然所不能，所以自有他的用处。大自然需要人来替她表达，而人又渴望拥有自己的价值。于是石涛说“山川使予代山川立言也。”有了这层关系，大自然是活着的大自然，人是有意义的人。大家就各取所需，两全其美了。董其昌总结道：“诗以山川为境，山川亦以诗为境。”此言得之。&lt;/p&gt;
&lt;p&gt;所以最有用的人，是亲近自然的人。而我们总是亲近我们自己。我们过于亲近自己，就会喜怒无常，心有挂碍。曾国藩说“一身之屈伸，一家之饥饱，君子固不暇忧及此也。”这并非不暇，而是不智。如果少年好色，中年好斗，老年好得，人就没了灵气，时间就要白白流逝。只有一双发现美的慧眼和不随波逐流的高格，才是每个人最大的宝贝。&lt;/p&gt;
&lt;p&gt;佛家说，身似菩提树，心如明镜台。人要像明镜一样，才能把握住人生。我们把自己变成明镜照这大千世界，还得志向高远，眼界开阔。时时勤拂拭，莫使惹尘埃。&lt;/p&gt;
&lt;p&gt;这也就引出来宗白华的一段话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;艺术心灵的诞生，在人生忘我的一刹那，即美学上所谓“静照”。静照的起点在于空诸一切，心无挂碍，和世务暂时绝缘。这时一点觉心，静观万象，万象如在镜中，光明莹洁，而各得其所，呈现着它们各自的充实的、内在的、自由的生命，所谓万物静观皆自得。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当我们静观万象而忘我的时候，就好像宇宙的镜子一样，喻无尽于有限，创造出映射真理的艺术形象、追问真理的哲学命题、或是描述真理的科学公式来。从这个角度说，菩提本无树，明镜亦非台，关键是树能“静”，镜能“照”，“静照”而“自得”也。如果“得”而传于后世，还有谁能说你渺小呢？&lt;/p&gt;
&lt;p&gt;英国人布莱克写诗说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一沙一世界，一花一天国，君掌盛无边，刹那含永劫。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;人来自大地，归于尘土，倏忽而逝，却足以给永恒一个象征，就像云雾中的小水珠，却反射着真理的光。&lt;/p&gt;
&lt;p&gt;歌德说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在璀璨的反光里，我们把握到生命。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;于是绳命，就变的回晃而井猜了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;注1：12年夏，在去威海的火车上读了宗白华的《美学散步》所写。&lt;/em&gt;&lt;br&gt;&lt;em&gt;注2：布莱克的诗名为《To see a world in a grain of sand》，翻译自《美学散步》。&lt;/em&gt;&lt;br&gt;&lt;em&gt;注3：歌德的话翻译自《美学散步》，后人多引用，相信这句话存在，但我却一时找不到原文（德语不行）。&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;回家这些日，发现故乡没什么变化，而这一年发生了多少事，人一辈子的变化又何其多呢？希腊人问道：“我是谁？从哪里来？到哪里去？”但是看到《赤壁赋》里形容人的渺小，好比“寄蜉蝣于天地，渺沧海之一粟”。我们就知道这三问是多么令人悲伤了。&lt;/p&gt;
&lt;p&gt;人都是要死的，而且死得很快，“修短随化，终期于尽”。在有限的人生里，人追求功名利禄，追求幸福快乐，追求真理，追求艺术，但是“一朝春尽红颜老，花谢人亡两不知”，不管人追求了什么，不管这个追求高尚还是低俗，人一旦死了，追到的东西也就看不见了。孙悟空道：“似这般可得长生么？不能？不学！”岂不痛哉！&lt;/p&gt;
&lt;p&gt;于是“在逃去如飞的日子里，在千门万户的世界里”，人们惘然而追问，我是谁？我在哪？我为什么出现？我来这里做什么呢？&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://hans2936.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="诗与散文" scheme="https://hans2936.github.io/tags/%E8%AF%97%E4%B8%8E%E6%95%A3%E6%96%87/"/>
    
  </entry>
  
  
  <entry>
  <title>游大明湖畔随笔</title>

  <link href="https://hans2936.github.io/2011/07/16/DaMingHu/"/>
  <id>https://hans2936.github.io/2011/07/16/DaMingHu/</id>
    <published>2011-07-15T16:42:42.000Z</published>
    <updated>2018-06-24T18:18:08.255Z</updated>
    
    <content type="html">&lt;p&gt;落日垂柳岸，雨后大明湖&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;游人采莲色，画舫追湖风&lt;/p&gt;
&lt;p&gt;荡漾六七倾，亭阁十几重&lt;/p&gt;
&lt;p&gt;诗社今犹在，质朴是民风&lt;/p&gt;
&lt;p&gt;济南名士多，历下有半城&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hans2936.github.io/2011/07/16/DaMingHu/DaMingHu.jpg&quot; alt=&quot;大明湖畔，拍摄于当天&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;注1：大明湖曾有王士祯“秋柳诗社”，现在为纪念馆&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注2：杜甫游大明湖，有《陪李北海宴历下亭》&lt;br&gt;“海右此亭古，济南名士多”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注3：大明湖位于历下区，湖内有“历下亭”，有名景“历下秋风”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注4：大明湖有刘凤诰楹联&lt;br&gt;“四面荷花三面柳，一城山色半城湖”&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;落日垂柳岸，雨后大明湖&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://hans2936.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="诗与散文" scheme="https://hans2936.github.io/tags/%E8%AF%97%E4%B8%8E%E6%95%A3%E6%96%87/"/>
    
  </entry>
  
</feed>
