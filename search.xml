<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[使用 Hexo 搭建本站]]></title>
    <url>%2F2018%2F06%2F06%2FHexoLog%2F</url>
    <content type="text"><![CDATA[最近用 Hexo 搭建了工作网站 CERN:Shuo Han，发现这个工具发文章就像是发朋友圈一样简单。虽然我以前用网页拼凑我的老网站花了很多时间，但我还是决定换了，写作和发布体验还是很重要的。我的理解是，这是一个自动生成静态（html+css+js）网站的工具，主题里是很多模块化的网页，可以通过.yml配置文件运用这些模块，把MarkDown(.md)博客批量转化为网页并且跟主页形成总分结构。下面是搭建的过程和本站配置： 首先，一切以Hexo官网为准。 准备工作 正常使用Github的电脑。 开了Github Pages的Repository。如果不了解Github可以看我的简书。 在mac上配置Hexo文件夹安装 Node/Npm12brew updatebrew install node 安装 Hexo12345npm install hexo -ghexo init blogcd blognpm installhexo s 这时博客就在本地生成了。访问http://localhost:4000 可以看效果。可以说Hexo是很强大的，默认主题网站结构合理，适配手机，搜索栏（google）也有了。只需要优化（改一下失效的链接，添加评论，RSS等模块）就行了。 基本操作 hexo g 生成/public 文件夹，里面是网站 hexo d 把这个网站文件夹推送到服务器 hexo clean 删除网站文件夹 hexo s 本地查看效果 配置文件配置文件是两个，第一个是根目录的 _config.yml。重要配置有 language: zh-CN 是中文，不写是英文 url: https://hans2936.github.io （我网站地址） root: / (根目录在哪里，github就写斜杠，不过有些服务器会多一层路径，一般是用户名) skip_render: README.md 这样可以在 /source 里面放一个 README.md，推送的时候自动传到 Github 上面 theme: landscape 这里可以换主题 推送设置 (GitHub)1234deploy: type: git repository: https://github.com/hans2936/hans2936.github.io.git branch: master 如果有服务器，则可以用 rsync123456deploy: type: rsync host: 服务器名 user: 用户名 root: 放网站的文件夹 port: 22 第二个配置文件，是主题的配置文件 themes/landscape/_config.yml，主要有导航栏12345menu: 主页: / 归档: /archives 关于: /aboutrss: /atom.xml 侧边栏1234widgets:- category- tag... 网站图标： favicon: /favicon.ico 其中 .ico 图片应放置在 /source 写新文章1hexo new &quot;article name&quot; 这条命令会在source/_posts产生新文件，然后改改文件名，在进入编辑MarkDown就行了。 每篇文章最上面是配置区，能用到的主要是 title: 题目 date: 日期 （会影响在主页的顺序） tags: 标签 categories: 分类 updated: 修改日期 配置区下面就随便写了。 创建页面1hexo new page about 会在 source/about 里面产生新文件，跟文章是一样编辑的。然后再从主题配置的导航栏里面加上这一页。123menu: ... 关于: /about 创建侧边栏比如在 themes/landscape/layout/_widget/ 创建一个 about.ejs12345678&lt;% if (site.tags.length)&#123; %&gt; &lt;div class=&quot;widget-wrap&quot;&gt; &lt;h3 class=&quot;widget-title&quot;&gt;About&lt;/h3&gt; &lt;div class=&quot;widget&quot;&gt; E-mail: shuo.han@cern.ch &lt;/div&gt; &lt;/div&gt;&lt;% &#125; %&gt; 然后在主题配置的侧边栏中加上：123widgets:- ...- about RSS 订阅执行 npm install hexo-generator-feed然后在主配置文件 _config.yml 里面加上123456plugin:- hexo-generator-feedfeed:type: atompath: atom.xmllimit: 20 站点地图类似上一条，执行 npm install hexo-generator-sitemap --save主配置文件添加：123# Sitemap sitemap: path: sitemap.xml 然后提交给 Google Search Console 就行了。 高级修改Hexo的网页其实是被拆开成很多零件的，主要在themes/landscape/layout/_partial/，比如对Gitment来说（关于Gitment见此教程），首先要打开 head.ejs 引用js, css文件（需放入themes/landscape/source）12&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/gitment.css&quot;&gt;&lt;script src=&quot;/js/gitment.browser.js&quot;&gt;&lt;/script&gt; 然后在 article.ejs 里面加上 Gitment 的code12345678910111213141516&lt;% if (!index &amp;&amp; post.comments)&#123; %&gt; &lt;section id=&quot;comments&quot;&gt; &lt;div id=&quot;gitment&quot;&gt;&lt;/div&gt; &lt;script&gt; const gitment = new Gitment(&#123; owner: &apos;username&apos;, repo: &apos;username.github.io&apos;, oauth: &#123; client_id: &apos;---yourID---&apos;, client_secret: &apos;---yourKey---&apos;, &#125;, &#125;) gitment.render(&apos;gitment&apos;) &lt;/script&gt;&lt;/section&gt;&lt;% &#125; %&gt; 就实现第三方功能了。主题自带的功能也可以改，比如说分享功能可以在themes/landscape/source/js/script.js加一句，1&apos;&lt;a href=&quot;http://service.weibo.com/share/share.php?&amp;title=&apos; + encodedUrl + &apos;&quot; class=&quot;article-share-sina&quot; target=&quot;_blank&quot; title=&quot;微博&quot;&gt;&lt;/a&gt;&apos; 然后找到themes/landscape/source/css/_partial/article.styl 定义一个1234567.article-share-sina @extend $article-share-link &amp;:before content: &quot;\f18a&quot; &amp;:hover background: color-google text-shadow: 0 1px darken(color-google, 20%) 就可以了。像这种高级修改，对有一定网页知识的人来说有无限可能，自己做一个主题都是可以的。 本站的Hexo设置 默认主题 Landscape。 抬头图片位置：themes/landscape/source/css/images/banner.jpg 评论系统为Gitment，需要编辑themes/landscape/layout/_partial/ 中的 article.ejs 和 head.ejs。 分享按钮为自带按钮，包括Sina+Facebook（改 themes/landscape/source/js/script.js 和 themes/landscape/source/css/_partial/article.styl）。 jquery.min.js 路径从google改为 https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js (改 after-footer.ejs)]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
